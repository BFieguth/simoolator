2. Add testing for each class
3. Create timeline for adding listed features
4. Create use case examples:
    - Running NASEM for a herd (via nasem_dairy)
    - Running integrated model on many different animals (via modelling_tools)
    - Running machine learning (via ml_tools)

===============
Features to Add
===============

- Parallel computing
    * Add native support for multithreading on CPU
    * Determine if GPU support is possible

- Modify input mapping
    * Add methods for altering the input mapping of a function. Make names don't have to match to work

- Export data from Cow/Herd to file

- Aggregate results across a herd
    * Perform some basic analysis on values

- Error handling when executing models
    * Handle errors gracefully. If one fails the rest should run. Return and store data about errors at the end

- Metadata
    * Store all information needed to reproduce results
    * Store metadata on the herd
    * Keep a log of each model execution, include error messages
    * Values related to performance / execution time

- Create Herd Session log
    * Create new log every time Herd is loaded from file
    * Store details of every method called on the Herd

- Add option to group Cows within a herd
    * Can use groups to execute on a subset of the Herd

- Add option to select which Cows to execute model on

- Methods to view and manage cows in a herd

- Methods to view and manage ModelRegistry

- Run herd.check_data_consistency before running models

- Update Cow input visualization to use print_nested_dict_tree()